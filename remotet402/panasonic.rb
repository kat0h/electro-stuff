fsc=38;#KHZ
signalOn=[3500,1700,450,400,450,400,450,1300,450,1250,450,400,450,1300,450,400,450,400,450,400,450,1300,450,400,450,400,450,1300,450,400,450,1250,450,400,450,1300,450,400,450,400,450,1300,450,400,450,400,450,400,450,400,450,400,450,400,450,1300,450,1300,450,400,450,1250,450,400,450,450,400,1300,450,400,450,1300,450,400,450,400,450,1300,450,400,450,400,450]
signalOff=[3500,1700,450,400,450,400,450,1300,450,1250,450,400,450,1300,450,400,450,400,450,400,450,1300,450,400,450,400,450,1300,450,400,450,1250,450,450,450,1250,450,400,450,400,450,1300,450,400,450,400,450,400,450,400,450,1300,450,1300,400,1300,450,1300,450,400,450,1250,450,400,450,450,450,400,450,1250,450,1300,450,400,450,400,450,1300,450,400,450,400,450]
def dumpSignal(sig)
  i=sig.map{|d|(d/425.0).round}[2..].each_slice(2).to_a()[..-2].map(&:last).map{|j|j>2?1:0}
  cc=i[...16]
  cccp=cc.each_slice(4).reduce{|r,j|r.zip(j).map{|x,y|x^y}}
  {customerCode:cc,customerCodeP:cccp,dat:i[20...]}
end
def ppSignal(sig)
  d=dumpSignal(sig)
  puts "Customer Code:        "+"%04x"%d[:customerCode].join.to_i(2)
  puts "Customer Code Parity: "+"%x"%d[:customerCodeP].join.to_i(2)
  puts "Data:                 "+[d[:dat][...4],*d[:dat][4...].each_slice(8)].map{|x|"%%0%dx"% (x.length/4) % x.join.to_i(2)}.join(" ")
end
ppSignal signalOn
ppSignal signalOff
